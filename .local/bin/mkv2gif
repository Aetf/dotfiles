#! /bin/bash

die()
{
	local _ret=$2
	test -n "$_ret" || _ret=1
	test "$_PRINT_HELP" = yes && print_help >&2
	echo "$1" >&2
	exit ${_ret}
}

begins_with_short_option()
{
	local first_option all_short_options
	all_short_options='fwh'
	first_option="${1:0:1}"
	test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

# THE DEFAULTS INITIALIZATION - POSITIONALS
_positionals=()
_arg_output_gif="output.gif"
# THE DEFAULTS INITIALIZATION - OPTIONALS
_arg_fps="10"
_arg_width="640"

print_help ()
{
	printf "%s\n" "Convert a mkv screencast to gif suitable for embedding on web"
	printf 'Usage: %s [-f|--fps <arg>] [-w|--width <arg>] [-h|--help] [--] <input-mkv> [<output-gif>]\n' "$0"
	printf "\t%s\n" "<input-mkv>: input mkv file"
	printf "\t%s\n" "<output-gif>: output gif file (default: '""output.gif""')"
	printf "\t%s\n" "-f,--fps: generated gif fps (default: '"10"')"
	printf "\t%s\n" "-w,--width: rescale output (default: '"640"')"
	printf "\t%s\n" "-h,--help: Prints help"
}

parse_commandline ()
{
	while test $# -gt 0
	do
		_key="$1"
	if test "$_key" = '--'
	then
		shift
		_positionals+=("$@")
		break
	fi
		case "$_key" in
			-f|--fps)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_fps="$2"
				shift
				;;
			--fps=*)
				_arg_fps="${_key##--fps=}"
				;;
			-f*)
				_arg_fps="${_key##-f}"
				;;
			-w|--width)
				test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
				_arg_width="$2"
				shift
				;;
			--width=*)
				_arg_width="${_key##--width=}"
				;;
			-w*)
				_arg_width="${_key##-w}"
				;;
			-h|--help)
				print_help
				exit 0
				;;
			-h*)
				print_help
				exit 0
				;;
			*)
				_positionals+=("$1")
				;;
		esac
		shift
	done
}


handle_passed_args_count ()
{
	_required_args_string="'input-mkv'"
	test ${#_positionals[@]} -lt 1 && _PRINT_HELP=yes die "FATAL ERROR: Not enough positional arguments - we require between 1 and 2 (namely: $_required_args_string), but got only ${#_positionals[@]}." 1
	test ${#_positionals[@]} -gt 2 && _PRINT_HELP=yes die "FATAL ERROR: There were spurious positional arguments --- we expect between 1 and 2 (namely: $_required_args_string), but got ${#_positionals[@]} (the last one was: '${_positionals[*]: -1}')." 1
}

assign_positional_args ()
{
	_positional_names=('_arg_input_mkv' '_arg_output_gif' )

	for (( ii = 0; ii < ${#_positionals[@]}; ii++))
	do
		eval "${_positional_names[ii]}=\${_positionals[ii]}" || die "Error during argument parsing, possibly an Argbash bug." 1
	done
}

parse_commandline "$@"
handle_passed_args_count
assign_positional_args

### END OF CODE GENERATED BY Argbash (sortof) ### ])

inputmkv=$_arg_input_mkv
outputgif=$_arg_output_gif
width=$_arg_width
fps=$_arg_fps

palette=$(mktemp --tmpdir palette-XXXXXXXX.png)
ffmpeg -y -i "$inputmkv" -vf fps=${fps},scale=${width}:-1:flags=lanczos,palettegen "$palette"
ffmpeg -i "$inputmkv" -i "$palette" -filter_complex "fps=${fps},scale=${width}:-1:flags=lanczos[x];[x][1:v]paletteuse" "$outputgif"
rm "$palette"
